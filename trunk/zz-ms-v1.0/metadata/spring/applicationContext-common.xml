<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:vld="http://www.springmodules.org/validation/bean/validator"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springmodules.org/validation/bean/validator http://www.springmodules.org/validation/bean/validator.xsd"
	default-lazy-init="true">
	<description>Spring公共配置文件</description>

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="properties" ref="databaseProperties" />
		<property name="locations">
			<list>
				<value>classpath*:/ApplicationResources.properties</value>
			</list>
		</property>
	</bean>
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basenames="ApplicationResources" />

	<!-- 数据库方式获取配置信息 -->
	<bean name="databaseProperties" class="com.jzzms.framework.core.DatabaseProperties">
		<constructor-arg index="0" ref="dataSource" />
		<constructor-arg index="1" value="select code,value from sys_config where status = 'V'" />
	</bean>

	<!-- OECS缓存管理器 -->
	<bean id="oecsCacheManageService" class="com.jzzms.framework.service.cache.CacheManagerService">
		<property name="cacheableList">
			<list>
				<!-- <ref bean="accessDecisionService"/> -->
			</list>
		</property>
	</bean>

	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" lazy-init="false" scope="singleton">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/jzzms/**/*Mapper.xml" />
		<!--model的映射文件 -->
		<property name="typeAliasesPackage" value="com.orientpay" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jzzms" />
		<property name="annotationClass" value="com.jzzms.framework.dao.ZzMsMapper" />
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 扫描annotation的bean -->
	<context:component-scan base-package="com.jzzms">
		<!--
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		-->
		<context:exclude-filter type="annotation" expression="com.jzzms.framework.dao.ZzMsMapper" />
	</context:component-scan>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>